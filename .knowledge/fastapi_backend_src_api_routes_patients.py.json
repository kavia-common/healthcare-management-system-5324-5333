{"is_source_file": true, "format": "Python", "description": "This file defines FastAPI routes for managing patient profiles in a healthcare management system. It includes endpoints for retrieving, updating, creating, and listing patient data, with access control based on user roles and JWT authentication.", "external_files": ["src.api.auth", "src.api.db", "src.api.models"], "external_methods": ["decode_token", "get_db", "convert_object_ids", "to_object_id"], "published": [], "classes": [{"name": "PaginatedPatients", "description": "Pydantic model representing a paginated list of patients with total count."}], "methods": [{"name": "Dict[str,Any] get_current_user(token: str = Depends(oauth2_scheme))", "description": "Decode JWT token to obtain user claims.", "scope": "", "scopeKind": ""}, {"name": "_patients(db: AsyncIOMotorDatabase)", "description": "Retrieve the patients collection from the database.", "scope": "", "scopeKind": ""}, {"name": "_users(db: AsyncIOMotorDatabase)", "description": "Retrieve the users collection from the database.", "scope": "", "scopeKind": ""}, {"name": "Any get_my_profile( user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Get the profile of the current patient user.", "scope": "", "scopeKind": ""}, {"name": "Any update_my_profile( payload: PatientUpdate, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Update the profile of the current patient user.", "scope": "", "scopeKind": ""}, {"name": "Any get_patient_by_id( id: str = Path(..., description=\"Patient document id\"), user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Get a patient profile by its document ID, accessible by doctor or admin.", "scope": "", "scopeKind": ""}, {"name": "Any create_patient( payload: PatientCreate, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Create a new patient profile, restricted to admin or self-creation by patient.", "scope": "", "scopeKind": ""}, {"name": "Any list_patients( user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), skip: int = Query(0, ge=0, description=\"Number of items to skip\"), limit: int = Query(20, ge=1, le=100, description=\"Max items to return\"), )", "description": "List all patients with pagination, accessible by doctor or admin.", "scope": "", "scopeKind": ""}], "calls": ["decode_token", "get_db", "convert_object_ids", "to_object_id", "coll.find_one", "coll.find_one_and_update", "coll.insert_one", "coll.count_documents", "coll.find"], "search-terms": ["FastAPI patient routes", "JWT user profile", "MongoDB patient collection", "Patient CRUD API", "Role-based access control patients"], "state": 2, "file_id": 11, "knowledge_revision": 33, "git_revision": "d7e3c76b04b73782fc073921cb83955240c493dd", "revision_history": [{"25": ""}, {"33": "d7e3c76b04b73782fc073921cb83955240c493dd"}], "ctags": [{"_type": "tag", "name": "PaginatedPatients", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^class PaginatedPatients(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_patients", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^async def _patients(db: AsyncIOMotorDatabase):$/", "language": "Python", "kind": "function", "signature": "(db: AsyncIOMotorDatabase)"}, {"_type": "tag", "name": "_users", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^async def _users(db: AsyncIOMotorDatabase):$/", "language": "Python", "kind": "function", "signature": "(db: AsyncIOMotorDatabase)"}, {"_type": "tag", "name": "create_patient", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^async def create_patient($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( payload: PatientCreate, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^async def get_current_user(token: str = Depends(oauth2_scheme)) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_my_profile", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^async def get_my_profile($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "get_patient_by_id", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^async def get_patient_by_id($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( id: str = Path(..., description=\"Patient document id\"), user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^    items: List[PatientOut] = Field(..., description=\"Patients\")$/", "language": "Python", "typeref": "typename:List[PatientOut]", "kind": "variable", "scope": "PaginatedPatients", "scopeKind": "class"}, {"_type": "tag", "name": "list_patients", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^async def list_patients($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), skip: int = Query(0, ge=0, description=\"Number of items to skip\"), limit: int = Query(20, ge=1, le=100, description=\"Max items to return\"), )"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\", scheme_name=\"JWT\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "total", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^    total: int = Field(..., description=\"Total count\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "PaginatedPatients", "scopeKind": "class"}, {"_type": "tag", "name": "update_my_profile", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/patients.py", "pattern": "/^async def update_my_profile($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( payload: PatientUpdate, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )"}], "hash": "62b4e1cfb8df12d0406c24e1da3d3b5b", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/api/routes/patients.py", "fields": [{"name": "List[PatientOut] items", "scope": "PaginatedPatients", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\", scheme_name=\"JWT\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int total", "scope": "PaginatedPatients", "scopeKind": "class", "description": "unavailable"}]}