{"is_source_file": true, "format": "Python", "description": "This file defines FastAPI route handlers for managing patient data in a healthcare management system. It provides endpoints for listing patients, retrieving the current user's patient profile, retrieving a patient by ID, creating, updating, and deleting patient records, with role-based access control.", "external_files": ["src/core/deps", "src/models/user", "src/models/patient", "src/db/mongo"], "external_methods": ["require_roles", "get_db", "PatientPublic.model_validate"], "published": ["router"], "classes": [], "methods": [{"name": "list_patients( q: Optional[str] = Query(None, description=\"Search by name\"), limit: int = Query(50, ge=1, le=200), skip: int = Query(0, ge=0), _: UserInDB = Depends(require_roles(Role.admin, Role.doctor)), )", "description": "Lists patients with optional search, accessible by admin and doctors.", "scope": "", "scopeKind": ""}, {"name": "get_my_patient_profile(user: UserInDB = Depends(require_roles(Role.patient)))", "description": "Retrieves the patient profile linked to the current user with patient role.", "scope": "", "scopeKind": ""}, {"name": "get_patient(patient_id: str, _: UserInDB = Depends(require_roles(Role.admin, Role.doctor)))", "description": "Retrieves a patient by their ID, accessible by admin and doctor.", "scope": "", "scopeKind": ""}, {"name": "create_patient(payload: PatientCreate, _: UserInDB = Depends(require_roles(Role.admin)))", "description": "Creates a new patient profile linked to a user, admin only.", "scope": "", "scopeKind": ""}, {"name": "update_patient( patient_id: str, payload: PatientUpdate, _: UserInDB = Depends(require_roles(Role.admin, Role.doctor)) )", "description": "Updates patient details, accessible by admin and doctors.", "scope": "", "scopeKind": ""}, {"name": "delete_patient(patient_id: str, _: UserInDB = Depends(require_roles(Role.admin)))", "description": "Deletes a patient profile, admin only.", "scope": "", "scopeKind": ""}], "calls": ["get_db()", "PatientPublic.model_validate()", "require_roles()", "db['patients'].find()", "db['patients'].find_one()", "db['patients'].insert_one()", "db['patients'].update_one()", "db['patients'].delete_one()"], "search-terms": ["FastAPI patient routes", "Patient CRUD endpoints", "Role-based access control", "MongoDB patient collection", "Patient profile management"], "state": 2, "file_id": 18, "knowledge_revision": 60, "git_revision": "20e8a65d556c2917d3f535fdc8020b3a4d760521", "revision_history": [{"38": ""}, {"60": "20e8a65d556c2917d3f535fdc8020b3a4d760521"}], "ctags": [{"_type": "tag", "name": "create_patient", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/patients.py", "pattern": "/^async def create_patient(payload: PatientCreate, _: UserInDB = Depends(require_roles(Role.admin)/", "language": "Python", "kind": "function", "signature": "(payload: PatientCreate, _: UserInDB = Depends(require_roles(Role.admin)))"}, {"_type": "tag", "name": "delete_patient", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/patients.py", "pattern": "/^async def delete_patient(patient_id: str, _: UserInDB = Depends(require_roles(Role.admin))):$/", "language": "Python", "kind": "function", "signature": "(patient_id: str, _: UserInDB = Depends(require_roles(Role.admin)))"}, {"_type": "tag", "name": "get_my_patient_profile", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/patients.py", "pattern": "/^async def get_my_patient_profile(user: UserInDB = Depends(require_roles(Role.patient))):$/", "language": "Python", "kind": "function", "signature": "(user: UserInDB = Depends(require_roles(Role.patient)))"}, {"_type": "tag", "name": "get_patient", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/patients.py", "pattern": "/^async def get_patient(patient_id: str, _: UserInDB = Depends(require_roles(Role.admin, Role.doct/", "language": "Python", "kind": "function", "signature": "(patient_id: str, _: UserInDB = Depends(require_roles(Role.admin, Role.doctor)))"}, {"_type": "tag", "name": "list_patients", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/patients.py", "pattern": "/^async def list_patients($/", "language": "Python", "kind": "function", "signature": "( q: Optional[str] = Query(None, description=\"Search by name\"), limit: int = Query(50, ge=1, le=200), skip: int = Query(0, ge=0), _: UserInDB = Depends(require_roles(Role.admin, Role.doctor)), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/patients.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_patient", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/patients.py", "pattern": "/^async def update_patient($/", "language": "Python", "kind": "function", "signature": "( patient_id: str, payload: PatientUpdate, _: UserInDB = Depends(require_roles(Role.admin, Role.doctor)) )"}], "hash": "6a04bb44b40055f4be731dbdcbbfeac1", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/routers/patients.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}