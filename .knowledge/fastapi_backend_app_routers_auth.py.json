{"is_source_file": true, "format": "Python", "description": "This file defines FastAPI route handlers for authentication functionalities such as user registration, login, and retrieving current user info. It manages user data with MongoDB via motor, employs JWT tokens for authentication, and leverages pydantic models for request and response schemas.", "external_files": ["app.core.security", "app.db.mongo"], "external_methods": ["create_access_token", "decode_token", "hash_password", "verify_password", "get_db"], "published": ["register", "login", "me"], "classes": [{"name": "TokenResponse", "description": "Pydantic model for JWT token response containing access_token and token_type."}, {"name": "RegisterRequest", "description": "Pydantic model for user registration request containing email, password, and optional full_name."}, {"name": "UserPublic", "description": "Pydantic model representing public user info, including id, email, and optional full_name."}], "methods": [{"name": "UserPublic register( payload: RegisterRequest, db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Handles user registration by creating a new user document in MongoDB after verifying email uniqueness and hashing the password.", "scope": "", "scopeKind": ""}, {"name": "TokenResponse login( form_data: OAuth2PasswordRequestForm = Depends(), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Authenticates user credentials and issues a JWT token if valid.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] me(token: str = Depends(oauth2_scheme))", "description": "Returns the decoded payload of the current user's JWT token.", "scope": "", "scopeKind": ""}, {"name": "_users(db: AsyncIOMotorDatabase)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["hash_password", "verify_password", "create_access_token", "decode_token", "get_db", "users.find_one", "users.insert_one"], "search-terms": ["FastAPI auth routes", "JWT token generation", "MongoDB user registration", "OAuth2PasswordBearer", "auth/registration", "auth/login", "current user info"], "state": 2, "file_id": 27, "knowledge_revision": 72, "git_revision": "", "ctags": [{"_type": "tag", "name": "RegisterRequest", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^class RegisterRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TokenResponse", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^class TokenResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserPublic", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^class UserPublic(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_users", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^async def _users(db: AsyncIOMotorDatabase):$/", "language": "Python", "kind": "function", "signature": "(db: AsyncIOMotorDatabase)"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^    access_token: str = Field(..., description=\"JWT access token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^    email: EmailStr = Field(..., description=\"Email\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "UserPublic", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^    email: EmailStr = Field(..., description=\"User email (unique)\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "RegisterRequest", "scopeKind": "class"}, {"_type": "tag", "name": "full_name", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^    full_name: Optional[str] = Field(None, description=\"Full name\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "RegisterRequest", "scopeKind": "class"}, {"_type": "tag", "name": "full_name", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^    full_name: Optional[str] = Field(None, description=\"Full name\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "UserPublic", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^    id: str = Field(..., description=\"User id\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserPublic", "scopeKind": "class"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^async def login($/", "language": "Python", "typeref": "typename:TokenResponse", "kind": "function", "signature": "( form_data: OAuth2PasswordRequestForm = Depends(), db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^async def me(token: str = Depends(oauth2_scheme)) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\", scheme_name=\"JWT\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^    password: str = Field(..., min_length=6, description=\"Password (min 6 chars)\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "RegisterRequest", "scopeKind": "class"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^async def register($/", "language": "Python", "typeref": "typename:UserPublic", "kind": "function", "signature": "( payload: RegisterRequest, db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/auth.py", "pattern": "/^    token_type: str = Field(\"bearer\", description=\"Token type\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}], "hash": "2113c772d37b50f11c64a2e6b86be09f", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/app/routers/auth.py", "fields": [{"name": "str access_token", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "EmailStr email", "scope": "UserPublic", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] full_name", "scope": "RegisterRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str id", "scope": "UserPublic", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\", scheme_name=\"JWT\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str password", "scope": "RegisterRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str token_type", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"72": ""}]}