{"is_source_file": true, "format": "Python", "description": "This file defines FastAPI routes for managing doctor profiles in a healthcare management system. It includes endpoints for retrieving, updating, and listing doctors, and handles JWT-based authentication to restrict access to authenticated users and specifically to doctors.", "external_files": ["src.api.auth", "src.api.db", "src.api.models"], "external_methods": ["decode_token", "get_db", "convert_object_ids", "to_object_id"], "published": ["get_current_user"], "classes": [{"name": "PaginatedDoctors", "description": "Pydantic model for paginated list of doctors, containing the list items and total count."}], "methods": [{"name": "Any get_my_doctor_profile( user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Returns the profile of the currently authenticated user if they are a doctor.", "scope": "", "scopeKind": ""}, {"name": "Any update_my_doctor_profile( payload: DoctorUpdate, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Allows a doctor to update their own profile fields.", "scope": "", "scopeKind": ""}, {"name": "Any get_doctor_by_id( id: str = Path(..., description=\"Doctor document id\"), user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Retrieves a doctor's profile by their document ID.", "scope": "", "scopeKind": ""}, {"name": "Any list_doctors( user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), skip: int = Query(0, ge=0), limit: int = Query(20, ge=1, le=100), q: str = Query(\"\", description=\"Optional text search on full_name or specialization\"), )", "description": "Provides a paginated list of doctors, with optional text search.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] get_current_user(token: str = Depends(oauth2_scheme))", "description": "Decodes JWT token to get user claims, used for authentication.", "scope": "", "scopeKind": ""}, {"name": "_doctors(db: AsyncIOMotorDatabase)", "description": "Helper to access the 'doctors' collection in the database.", "scope": "", "scopeKind": ""}], "calls": ["decode_token(token)", "get_db()", "convert_object_ids(doc)", "to_object_id(id)", "coll.find_one()", "coll.find_one_and_update()", "coll.count_documents()", "coll.find()"], "search-terms": ["FastAPI doctor routes", "JWT authentication", "MongoDB doctor profile", "doctor profile management", "pagination doctors"], "state": 2, "file_id": 12, "knowledge_revision": 27, "git_revision": "", "ctags": [{"_type": "tag", "name": "PaginatedDoctors", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/doctors.py", "pattern": "/^class PaginatedDoctors(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_doctors", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/doctors.py", "pattern": "/^async def _doctors(db: AsyncIOMotorDatabase):$/", "language": "Python", "kind": "function", "signature": "(db: AsyncIOMotorDatabase)"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/doctors.py", "pattern": "/^async def get_current_user(token: str = Depends(oauth2_scheme)) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_doctor_by_id", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/doctors.py", "pattern": "/^async def get_doctor_by_id($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( id: str = Path(..., description=\"Doctor document id\"), user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "get_my_doctor_profile", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/doctors.py", "pattern": "/^async def get_my_doctor_profile($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/doctors.py", "pattern": "/^    items: List[DoctorOut] = Field(..., description=\"Doctors\")$/", "language": "Python", "typeref": "typename:List[DoctorOut]", "kind": "variable", "scope": "PaginatedDoctors", "scopeKind": "class"}, {"_type": "tag", "name": "list_doctors", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/doctors.py", "pattern": "/^async def list_doctors($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), skip: int = Query(0, ge=0), limit: int = Query(20, ge=1, le=100), q: str = Query(\"\", description=\"Optional text search on full_name or specialization\"), )"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/doctors.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\", scheme_name=\"JWT\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/doctors.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "total", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/doctors.py", "pattern": "/^    total: int = Field(..., description=\"Total count\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "PaginatedDoctors", "scopeKind": "class"}, {"_type": "tag", "name": "update_my_doctor_profile", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/doctors.py", "pattern": "/^async def update_my_doctor_profile($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( payload: DoctorUpdate, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )"}], "hash": "f0df7c1938b506e46af6349dc7fe64e8", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/api/routes/doctors.py", "fields": [{"name": "List[DoctorOut] items", "scope": "PaginatedDoctors", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\", scheme_name=\"JWT\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int total", "scope": "PaginatedDoctors", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"27": ""}]}