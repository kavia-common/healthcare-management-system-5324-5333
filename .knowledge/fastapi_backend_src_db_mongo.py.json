{"is_source_file": true, "format": "Python", "description": "This file manages MongoDB database connections and index setup for a healthcare management system, including initializing, closing, and ensuring indexes on collections.", "external_files": ["src.core.config.settings"], "external_methods": ["settings.MONGODB_URL", "settings.MONGODB_DB"], "published": ["init_mongo", "close_mongo", "get_db", "ensure_critical_indexes"], "classes": [], "methods": [{"name": "None init_mongo()", "description": "Initializes the global MongoDB motor client if it is not already initialized.", "scope": "", "scopeKind": ""}, {"name": "None close_mongo()", "description": "Closes the MongoDB client if it has been initialized.", "scope": "", "scopeKind": ""}, {"name": "AsyncIOMotorDatabase get_db()", "description": "Returns the application's database instance; initializes the client if necessary.", "scope": "", "scopeKind": ""}, {"name": "None ensure_critical_indexes()", "description": "Creates essential indexes on various collections to optimize queries and enforce constraints.", "scope": "", "scopeKind": ""}], "calls": ["AsyncIOMotorClient(settings.MONGODB_URL)", "db['users'].create_index([('email', ASCENDING)], name='u_email', unique=True)", "db['patients'].create_index([('user_id', ASCENDING)], name='u_patient_user', unique=True)", "db['doctors'].create_index([('user_id', ASCENDING)], name='u_doctor_user', unique=True)", "db['consultations'].create_index([('patient_id', ASCENDING)], name='i_consult_patient')", "db['consultations'].create_index([('doctor_id', ASCENDING)], name='i_consult_doctor')", "db['consultations'].create_index([('scheduled_at', ASCENDING)], name='i_consult_time')", "db['doctors'].create_index([('specialty', TEXT), ('full_name', TEXT)], name='t_doctor_search')", "db['patients'].create_index([('full_name', TEXT)], name='t_patient_search')", "db['medical_records'].create_index([('patient_id', ASCENDING)], name='i_medrec_patient')"], "search-terms": ["MongoDB", "index management", "asynchronous database connection", "healthcare system database", "motor", "MongoClient"], "state": 2, "file_id": 8, "knowledge_revision": 55, "git_revision": "20e8a65d556c2917d3f535fdc8020b3a4d760521", "revision_history": [{"18": ""}, {"55": "20e8a65d556c2917d3f535fdc8020b3a4d760521"}], "ctags": [{"_type": "tag", "name": "_client", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/db/mongo.py", "pattern": "/^_client: Optional[AsyncIOMotorClient] = None$/", "language": "Python", "typeref": "typename:Optional[AsyncIOMotorClient]", "kind": "variable"}, {"_type": "tag", "name": "close_mongo", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/db/mongo.py", "pattern": "/^async def close_mongo() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "ensure_critical_indexes", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/db/mongo.py", "pattern": "/^async def ensure_critical_indexes() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/db/mongo.py", "pattern": "/^async def get_db() -> AsyncIOMotorDatabase:$/", "language": "Python", "typeref": "typename:AsyncIOMotorDatabase", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "init_mongo", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/db/mongo.py", "pattern": "/^async def init_mongo() -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "()"}], "hash": "454cb01bc768087f36fb154d759569d8", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/db/mongo.py", "fields": [{"name": "Optional[AsyncIOMotorClient] _client", "scope": "", "scopeKind": "", "description": "unavailable"}]}