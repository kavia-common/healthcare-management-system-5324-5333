{"is_source_file": true, "format": "Python", "description": "This file defines API routes for authentication in a FastAPI backend, including user registration, login, and current user info retrieval. It manages user creation with role-specific profiles and JWT token issuance.", "external_files": ["src.api.auth", "src.api.db"], "external_methods": ["create_access_token", "decode_token", "hash_password", "verify_password", "get_db"], "published": ["TokenResponse", "RegisterRequest", "UserPublic", "oauth2_scheme", "register", "login", "me"], "classes": [{"name": "TokenResponse", "description": "Response model containing the JWT access token and token type."}, {"name": "RegisterRequest", "description": "Request model for user registration, including email, password, full name, and role."}, {"name": "UserPublic", "description": "Response model for public user info, including id, email, role, and full name."}], "methods": [{"name": "_get_users_collection(db: AsyncIOMotorDatabase)", "description": "Asynchronously retrieves the users collection from the database.", "scope": "", "scopeKind": ""}, {"name": "_get_profile_collection(db: AsyncIOMotorDatabase, role: str)", "description": "Selects the role-specific profile collection based on user role.", "scope": "", "scopeKind": ""}, {"name": "UserPublic register( payload: RegisterRequest, db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Endpoint to create a new user if email is unique, hash password, assign role, and create role-specific profile stub.", "scope": "", "scopeKind": ""}, {"name": "TokenResponse login( form_data: OAuth2PasswordRequestForm = Depends(), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Authenticate user credentials, generate, and return a JWT token with user id and role.", "scope": "", "scopeKind": ""}, {"name": "Dict[str,Any] me(token: str = Depends(oauth2_scheme))", "description": "Return the decoded payload of the current user's JWT token.", "scope": "", "scopeKind": ""}], "calls": ["create_access_token", "decode_token", "hash_password", "verify_password", "get_db", "users.find_one", "users.insert_one", "profile_coll.insert_one"], "search-terms": ["FastAPI authentication routes", "JWT token issuance", "role-specific user profile creation", "user registration and login endpoints", "OAuth2PasswordBearer"], "state": 2, "file_id": 9, "knowledge_revision": 21, "git_revision": "724005704b6546458176cc1048fdcfc239034f76", "revision_history": [{"18": ""}, {"21": "724005704b6546458176cc1048fdcfc239034f76"}], "ctags": [{"_type": "tag", "name": "RegisterRequest", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^class RegisterRequest(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TokenResponse", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^class TokenResponse(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "UserPublic", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^class UserPublic(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_get_profile_collection", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^async def _get_profile_collection(db: AsyncIOMotorDatabase, role: str):$/", "language": "Python", "kind": "function", "signature": "(db: AsyncIOMotorDatabase, role: str)"}, {"_type": "tag", "name": "_get_users_collection", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^async def _get_users_collection(db: AsyncIOMotorDatabase):$/", "language": "Python", "kind": "function", "signature": "(db: AsyncIOMotorDatabase)"}, {"_type": "tag", "name": "access_token", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^    access_token: str = Field(..., description=\"JWT access token\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^    email: EmailStr = Field(..., description=\"Email\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "UserPublic", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^    email: EmailStr = Field(..., description=\"User email (unique)\")$/", "language": "Python", "typeref": "typename:EmailStr", "kind": "variable", "scope": "RegisterRequest", "scopeKind": "class"}, {"_type": "tag", "name": "full_name", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^    full_name: Optional[str] = Field(None, description=\"Full name\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "RegisterRequest", "scopeKind": "class"}, {"_type": "tag", "name": "full_name", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^    full_name: Optional[str] = Field(None, description=\"Full name\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "UserPublic", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^    id: str = Field(..., description=\"User id\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserPublic", "scopeKind": "class"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^async def login($/", "language": "Python", "typeref": "typename:TokenResponse", "kind": "function", "signature": "( form_data: OAuth2PasswordRequestForm = Depends(), db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "me", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^async def me(token: str = Depends(oauth2_scheme)) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\", scheme_name=\"JWT\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "password", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^    password: str = Field(..., min_length=6, description=\"Password (min 6 chars)\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "RegisterRequest", "scopeKind": "class"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^async def register($/", "language": "Python", "typeref": "typename:UserPublic", "kind": "function", "signature": "( payload: RegisterRequest, db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^    role: str = Field(..., description=\"Role\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "UserPublic", "scopeKind": "class"}, {"_type": "tag", "name": "role", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^    role: str = Field(..., description=\"User role: 'patient' or 'doctor'\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "RegisterRequest", "scopeKind": "class"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "token_type", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/api/routes/auth.py", "pattern": "/^    token_type: str = Field(\"bearer\", description=\"Token type\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TokenResponse", "scopeKind": "class"}], "hash": "5762ac0350f54ad805a349cb9e9fef53", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/api/routes/auth.py", "fields": [{"name": "str access_token", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}, {"name": "EmailStr email", "scope": "UserPublic", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] full_name", "scope": "RegisterRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str id", "scope": "UserPublic", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\", scheme_name=\"JWT\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str password", "scope": "RegisterRequest", "scopeKind": "class", "description": "unavailable"}, {"name": "str role", "scope": "UserPublic", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str token_type", "scope": "TokenResponse", "scopeKind": "class", "description": "unavailable"}]}