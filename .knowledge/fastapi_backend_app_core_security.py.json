{"is_source_file": true, "format": "Python", "description": "This file contains security-related utility functions for password hashing, password verification, JWT token creation, and JWT token decoding, used within a healthcare management system application.", "external_files": ["app.core.config"], "external_methods": ["app.core.config.get_settings", "jwt.encode", "jwt.decode"], "published": ["hash_password", "verify_password", "create_access_token", "decode_token"], "classes": [], "methods": [{"name": "str hash_password(password: str)", "description": "Hashes a plaintext password using bcrypt via passlib.", "scope": "", "scopeKind": ""}, {"name": "bool verify_password(plain_password: str, password_hash: str)", "description": "Verifies a plaintext password against a stored bcrypt hash.", "scope": "", "scopeKind": ""}, {"name": "str create_access_token(subject: str, role: str, additional_claims: Optional[Dict[str, Any]] = None)", "description": "Creates a signed JWT access token with user subject, role, and optional extra claims.", "scope": "", "scopeKind": ""}, {"name": "Optional[Dict[str,Any]] decode_token(token: str)", "description": "Decodes and validates a JWT token, returning claims if valid or None if invalid.", "scope": "", "scopeKind": ""}], "calls": ["jwt.encode", "jwt.decode", "app.core.config.get_settings"], "search-terms": ["JWT security", "password hashing", "token creation", "token decoding", "bcrypt", "passlib"], "state": 2, "file_id": 21, "knowledge_revision": 61, "git_revision": "", "ctags": [{"_type": "tag", "name": "_pwd_context", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/core/security.py", "pattern": "/^_pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "create_access_token", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/core/security.py", "pattern": "/^def create_access_token(subject: str, role: str, additional_claims: Optional[Dict[str, Any]] = N/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(subject: str, role: str, additional_claims: Optional[Dict[str, Any]] = None)"}, {"_type": "tag", "name": "decode_token", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/core/security.py", "pattern": "/^def decode_token(token: str) -> Optional[Dict[str, Any]]:$/", "language": "Python", "typeref": "typename:Optional[Dict[str,Any]]", "kind": "function", "signature": "(token: str)"}, {"_type": "tag", "name": "hash_password", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/core/security.py", "pattern": "/^def hash_password(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/core/security.py", "pattern": "/^def verify_password(plain_password: str, password_hash: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, password_hash: str)"}], "hash": "3cdd58adcd719879597ed634f8e8e6e0", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/app/core/security.py", "fields": [{"name": "_pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"61": ""}]}