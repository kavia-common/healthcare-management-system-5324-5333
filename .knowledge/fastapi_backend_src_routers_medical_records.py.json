{"is_source_file": true, "format": "Python", "description": "FastAPI router module handling CRUD operations for medical records, including creating, listing, and retrieving records with role-based access control.", "external_files": ["src/core/deps", "src/models/user", "src/models/medical_record", "src/db/mongo"], "external_methods": ["get_current_user", "require_roles", "get_db", "MedicalRecordCreate.model_dump", "MedicalRecordPublic.model_validate"], "published": ["router"], "classes": [], "methods": [{"name": "create_record(payload: MedicalRecordCreate, _: UserInDB = Depends(require_roles(Role.doctor, Role.admin)))", "description": "Creates a new medical record entry, accessible by doctors or administrators.", "scope": "", "scopeKind": ""}, {"name": "list_records( patient_id: Optional[str] = Query(None, description=\"Patient id (required for doctor/admin)\"), user: UserInDB = Depends(get_current_user), limit: int = Query(50, ge=1, le=200), skip: int = Query(0, ge=0), )", "description": "Lists medical records for a patient; accessible based on user role.", "scope": "", "scopeKind": ""}, {"name": "get_record(record_id: str, user: UserInDB = Depends(get_current_user))", "description": "Retrieves a specific medical record by id, with access restrictions for patients.", "scope": "", "scopeKind": ""}], "calls": ["get_db", "MedicalRecordCreate.model_dump", "db[\"medical_records\"].insert_one", "db[\"medical_records\"].find_one", "MedicalRecordPublic.model_validate", "db[\"patients\"].find_one", "db[\"medical_records\"].find", "ObjectId", "get_current_user", "require_roles"], "search-terms": ["medical_records", "FastAPI medical record routers", "role-based access control", "patient record listing"], "state": 2, "file_id": 21, "knowledge_revision": 44, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_record", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/medical_records.py", "pattern": "/^async def create_record(payload: MedicalRecordCreate, _: UserInDB = Depends(require_roles(Role.d/", "language": "Python", "kind": "function", "signature": "(payload: MedicalRecordCreate, _: UserInDB = Depends(require_roles(Role.doctor, Role.admin)))"}, {"_type": "tag", "name": "get_record", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/medical_records.py", "pattern": "/^async def get_record(record_id: str, user: UserInDB = Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(record_id: str, user: UserInDB = Depends(get_current_user))"}, {"_type": "tag", "name": "list_records", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/medical_records.py", "pattern": "/^async def list_records($/", "language": "Python", "kind": "function", "signature": "( patient_id: Optional[str] = Query(None, description=\"Patient id (required for doctor/admin)\"), user: UserInDB = Depends(get_current_user), limit: int = Query(50, ge=1, le=200), skip: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/medical_records.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}], "hash": "aa045eccd3f4d33f3cdb4dac53990835", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/routers/medical_records.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"44": ""}]}