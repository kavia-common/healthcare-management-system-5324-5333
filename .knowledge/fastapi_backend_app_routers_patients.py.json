{"is_source_file": true, "format": "Python", "description": "This file defines FastAPI routes for managing patient data in a healthcare management system. It includes endpoints for listing, creating, retrieving by ID, updating, and deleting patient records using asynchronous MongoDB operations with Motor. The file also manages authentication via JWT tokens and includes data models for request and response payloads.", "external_files": ["app.core.security", "app.db.mongo", "app.models.schemas"], "external_methods": ["decode_token", "get_db", "convert_object_ids"], "published": [], "classes": [{"name": "PaginatedPatients", "description": "A Pydantic model for paginated list of patients, containing items and total count."}], "methods": [{"name": "Dict[str,Any] get_current_user(token: str = Depends(oauth2_scheme))", "description": "Decodes JWT token to obtain user claims, raises 401 if token invalid or expired.", "scope": "", "scopeKind": ""}, {"name": "_patients(db: AsyncIOMotorDatabase)", "description": "Helper to get the patients collection from the database.", "scope": "", "scopeKind": ""}, {"name": "Any list_patients( user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), skip: int = Query(0, ge=0, description=\"Number of items to skip\"), limit: int = Query(20, ge=1, le=100, description=\"Max items to return\"), )", "description": "Endpoint to list patients with pagination.", "scope": "", "scopeKind": ""}, {"name": "Any create_patient( payload: PatientCreate, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Endpoint to create a new patient record.", "scope": "", "scopeKind": ""}, {"name": "Any get_patient_by_id( id: str = Path(..., description=\"Patient document id\"), user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Endpoint to retrieve a patient by their document ID.", "scope": "", "scopeKind": ""}, {"name": "Any update_patient( id: str, payload: PatientUpdate, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Endpoint to update patient details by their document ID.", "scope": "", "scopeKind": ""}, {"name": "None delete_patient( id: str, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )", "description": "Endpoint to delete a patient record by ID.", "scope": "", "scopeKind": ""}], "calls": ["decode_token", "get_db", "convert_object_ids", "coll.count_documents", "coll.find", "coll.insert_one", "coll.find_one", "coll.find_one_and_update", "coll.delete_one"], "search-terms": ["FastAPI", "patients", "MongoDB", "Motor", "JWT", "PatientCreate", "PatientOut", "PatientUpdate", "get_current_user", "list_patients", "create_patient", "get_patient_by_id", "update_patient", "delete_patient"], "state": 2, "file_id": 28, "knowledge_revision": 74, "git_revision": "", "ctags": [{"_type": "tag", "name": "PaginatedPatients", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^class PaginatedPatients(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_patients", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^async def _patients(db: AsyncIOMotorDatabase):$/", "language": "Python", "kind": "function", "signature": "(db: AsyncIOMotorDatabase)"}, {"_type": "tag", "name": "create_patient", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^async def create_patient($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( payload: PatientCreate, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "delete_patient", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^async def delete_patient($/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "( id: str, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^async def get_current_user(token: str = Depends(oauth2_scheme)) -> Dict[str, Any]:$/", "language": "Python", "typeref": "typename:Dict[str,Any]", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme))"}, {"_type": "tag", "name": "get_patient_by_id", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^async def get_patient_by_id($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( id: str = Path(..., description=\"Patient document id\"), user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )"}, {"_type": "tag", "name": "items", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^    items: List[PatientOut] = Field(..., description=\"Patients\")$/", "language": "Python", "typeref": "typename:List[PatientOut]", "kind": "variable", "scope": "PaginatedPatients", "scopeKind": "class"}, {"_type": "tag", "name": "list_patients", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^async def list_patients($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), skip: int = Query(0, ge=0, description=\"Number of items to skip\"), limit: int = Query(20, ge=1, le=100, description=\"Max items to return\"), )"}, {"_type": "tag", "name": "oauth2_scheme", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\", scheme_name=\"JWT\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "total", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^    total: int = Field(..., description=\"Total count\")$/", "language": "Python", "typeref": "typename:int", "kind": "variable", "scope": "PaginatedPatients", "scopeKind": "class"}, {"_type": "tag", "name": "update_patient", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/app/routers/patients.py", "pattern": "/^async def update_patient($/", "language": "Python", "typeref": "typename:Any", "kind": "function", "signature": "( id: str, payload: PatientUpdate, user: Dict[str, Any] = Depends(get_current_user), db: AsyncIOMotorDatabase = Depends(get_db), )"}], "hash": "46eb6677c7c6a8471688ddfeba8a7b79", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/app/routers/patients.py", "fields": [{"name": "List[PatientOut] items", "scope": "PaginatedPatients", "scopeKind": "class", "description": "unavailable"}, {"name": "oauth2_scheme = OAuth2PasswordBearer(tokenUrl=\"\\/auth\\/login\", scheme_name=\"JWT\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "int total", "scope": "PaginatedPatients", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"74": ""}]}