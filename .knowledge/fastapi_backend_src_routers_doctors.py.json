{"is_source_file": true, "format": "Python", "description": "This file defines REST API endpoints for managing doctor profiles in a healthcare management system using FastAPI. It includes listing/searching doctors, retrieving profiles (own or by ID), creating, updating, and deleting doctor profiles, with appropriate role-based access control.", "external_files": ["src/core/deps", "src/models/user", "src/models/doctor", "src/db/mongo"], "external_methods": ["require_roles", "UserInDB", "Role", "DoctorCreate", "DoctorUpdate", "DoctorPublic", "get_db"], "published": ["list_doctors", "get_my_doctor_profile", "get_doctor", "create_doctor", "update_doctor", "delete_doctor"], "classes": [], "methods": [{"name": "list_doctors( q: Optional[str] = Query(None, description=\"Search by name or specialty\"), limit: int = Query(50, ge=1, le=200), skip: int = Query(0, ge=0), )", "description": "Fetches a list of doctors, with optional search by name or specialty, supporting pagination.", "scope": "", "scopeKind": ""}, {"name": "get_my_doctor_profile(user: UserInDB = Depends(require_roles(Role.doctor)))", "description": "Retrieves the doctor profile linked to the current user (requires 'doctor' role).", "scope": "", "scopeKind": ""}, {"name": "get_doctor(doctor_id: str)", "description": "Retrieves a doctor profile by its ID.", "scope": "", "scopeKind": ""}, {"name": "create_doctor(payload: DoctorCreate, _: UserInDB = Depends(require_roles(Role.admin)))", "description": "Creates a new doctor profile linked to a user, restricted to admin role.", "scope": "", "scopeKind": ""}, {"name": "update_doctor(doctor_id: str, payload: DoctorUpdate, _: UserInDB = Depends(require_roles(Role.admin)))", "description": "Updates details of a doctor profile by ID, restricted to admin role.", "scope": "", "scopeKind": ""}, {"name": "delete_doctor(doctor_id: str, _: UserInDB = Depends(require_roles(Role.admin)))", "description": "Deletes a doctor profile by ID, restricted to admin role.", "scope": "", "scopeKind": ""}], "calls": ["get_db", "DoctorPublic.model_validate", "require_roles", "db['doctors'].find", "db['doctors'].find_one", "db['doctors'].insert_one", "db['doctors'].update_one", "db['doctors'].delete_one"], "search-terms": ["FastAPI doctors endpoints", "MongoDB doctor profiles", "Role-based access control", "Doctor CRUD API", "Health system backend"], "state": 2, "file_id": 19, "knowledge_revision": 59, "git_revision": "20e8a65d556c2917d3f535fdc8020b3a4d760521", "revision_history": [{"40": ""}, {"59": "20e8a65d556c2917d3f535fdc8020b3a4d760521"}], "ctags": [{"_type": "tag", "name": "create_doctor", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def create_doctor(payload: DoctorCreate, _: UserInDB = Depends(require_roles(Role.admin)))/", "language": "Python", "kind": "function", "signature": "(payload: DoctorCreate, _: UserInDB = Depends(require_roles(Role.admin)))"}, {"_type": "tag", "name": "delete_doctor", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def delete_doctor(doctor_id: str, _: UserInDB = Depends(require_roles(Role.admin))):$/", "language": "Python", "kind": "function", "signature": "(doctor_id: str, _: UserInDB = Depends(require_roles(Role.admin)))"}, {"_type": "tag", "name": "get_doctor", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def get_doctor(doctor_id: str):$/", "language": "Python", "kind": "function", "signature": "(doctor_id: str)"}, {"_type": "tag", "name": "get_my_doctor_profile", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def get_my_doctor_profile(user: UserInDB = Depends(require_roles(Role.doctor))):$/", "language": "Python", "kind": "function", "signature": "(user: UserInDB = Depends(require_roles(Role.doctor)))"}, {"_type": "tag", "name": "list_doctors", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def list_doctors($/", "language": "Python", "kind": "function", "signature": "( q: Optional[str] = Query(None, description=\"Search by name or specialty\"), limit: int = Query(50, ge=1, le=200), skip: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_doctor", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def update_doctor(doctor_id: str, payload: DoctorUpdate, _: UserInDB = Depends(require_rol/", "language": "Python", "kind": "function", "signature": "(doctor_id: str, payload: DoctorUpdate, _: UserInDB = Depends(require_roles(Role.admin)))"}], "hash": "3c3fe20200b8e130e9c5db13e22c28eb", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/routers/doctors.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}]}