{"is_source_file": true, "format": "Python", "description": "This Python source file defines FastAPI route handlers for managing doctor profiles in a healthcare management system. It includes endpoints for listing/searching doctors, retrieving the current user's doctor profile, fetching a specific doctor by ID, creating, updating, and deleting doctor records. The code interacts with a MongoDB database and uses models for data validation.", "external_files": ["src/core/deps", "src/models/user", "src/models/doctor", "src/db/mongo"], "external_methods": ["get_current_user", "require_roles", "UserInDB.model_validate", "DoctorPublic.model_validate", "get_db"], "published": ["list_doctors", "get_my_doctor_profile", "get_doctor", "create_doctor", "update_doctor", "delete_doctor"], "classes": [], "methods": [{"name": "list_doctors( q: Optional[str] = Query(None, description=\"Search by name or specialty\"), limit: int = Query(50, ge=1, le=200), skip: int = Query(0, ge=0), )", "description": "Handles GET requests to list or search doctors by name or specialty, supporting pagination.", "scope": "", "scopeKind": ""}, {"name": "get_my_doctor_profile(user: UserInDB = Depends(require_roles(Role.doctor)))", "description": "Retrieves the profile of the current user if they have a doctor role.", "scope": "", "scopeKind": ""}, {"name": "get_doctor(doctor_id: str)", "description": "Fetches a doctor profile by the specified ObjectId.", "scope": "", "scopeKind": ""}, {"name": "create_doctor(payload: DoctorCreate, _: UserInDB = Depends(require_roles(Role.admin)))", "description": "Creates a new doctor profile linked to a user, restricted to admin role.", "scope": "", "scopeKind": ""}, {"name": "update_doctor(doctor_id: str, payload: DoctorUpdate, _: UserInDB = Depends(require_roles(Role.admin)))", "description": "Updates details of an existing doctor profile, restricted to admin role.", "scope": "", "scopeKind": ""}, {"name": "delete_doctor(doctor_id: str, _: UserInDB = Depends(require_roles(Role.admin)))", "description": "Deletes a doctor profile by ObjectId, restricted to admin role.", "scope": "", "scopeKind": ""}], "calls": ["get_db()", "DoctorPublic.model_validate()", "require_roles()", "UserInDB.model_validate()", "db['doctors'].find_one()", "db['doctors'].find_one()", "db['doctors'].insert_one()", "db['doctors'].update_one()", "db['doctors'].find_one()", "db['doctors'].delete_one()"], "search-terms": ["doctor management", "FastAPI doctor endpoints", "MongoDB doctor model", "doctor profile CRUD", "healthcare system API"], "state": 2, "file_id": 19, "knowledge_revision": 40, "git_revision": "", "ctags": [{"_type": "tag", "name": "create_doctor", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def create_doctor(payload: DoctorCreate, _: UserInDB = Depends(require_roles(Role.admin)))/", "language": "Python", "kind": "function", "signature": "(payload: DoctorCreate, _: UserInDB = Depends(require_roles(Role.admin)))"}, {"_type": "tag", "name": "delete_doctor", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def delete_doctor(doctor_id: str, _: UserInDB = Depends(require_roles(Role.admin))):$/", "language": "Python", "kind": "function", "signature": "(doctor_id: str, _: UserInDB = Depends(require_roles(Role.admin)))"}, {"_type": "tag", "name": "get_doctor", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def get_doctor(doctor_id: str):$/", "language": "Python", "kind": "function", "signature": "(doctor_id: str)"}, {"_type": "tag", "name": "get_my_doctor_profile", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def get_my_doctor_profile(user: UserInDB = Depends(require_roles(Role.doctor))):$/", "language": "Python", "kind": "function", "signature": "(user: UserInDB = Depends(require_roles(Role.doctor)))"}, {"_type": "tag", "name": "list_doctors", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def list_doctors($/", "language": "Python", "kind": "function", "signature": "( q: Optional[str] = Query(None, description=\"Search by name or specialty\"), limit: int = Query(50, ge=1, le=200), skip: int = Query(0, ge=0), )"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "update_doctor", "path": "/home/kavia/workspace/code-generation/healthcare-management-system-5324-5333/fastapi_backend/src/routers/doctors.py", "pattern": "/^async def update_doctor(doctor_id: str, payload: DoctorUpdate, _: UserInDB = Depends(require_rol/", "language": "Python", "kind": "function", "signature": "(doctor_id: str, payload: DoctorUpdate, _: UserInDB = Depends(require_roles(Role.admin)))"}], "hash": "a5e6931ea491735f93b293449715f279", "format-version": 4, "code-base-name": "fastapi_backend", "filename": "fastapi_backend/src/routers/doctors.py", "fields": [{"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"40": ""}]}